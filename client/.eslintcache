[{"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\index.js":"1","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\App.js":"2","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\pages\\SearchBooks.js":"4","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\components\\Navbar.js":"5","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\localStorage.js":"8","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\queries.js":"9","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\mutations.js":"10","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\API.js":"11","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\auth.js":"12"},{"size":266,"mtime":1669486358751,"results":"13","hashOfConfig":"14"},{"size":1532,"mtime":1670257814217,"results":"15","hashOfConfig":"14"},{"size":2468,"mtime":1670262763311,"results":"16","hashOfConfig":"14"},{"size":4890,"mtime":1670210787586,"results":"17","hashOfConfig":"14"},{"size":2524,"mtime":1669486358750,"results":"18","hashOfConfig":"14"},{"size":3257,"mtime":1670218374492,"results":"19","hashOfConfig":"14"},{"size":2915,"mtime":1670262664346,"results":"20","hashOfConfig":"14"},{"size":793,"mtime":1669486358754,"results":"21","hashOfConfig":"14"},{"size":368,"mtime":1670263147628,"results":"22","hashOfConfig":"14"},{"size":1419,"mtime":1670263064518,"results":"23","hashOfConfig":"14"},{"size":1534,"mtime":1670210436866,"results":"24","hashOfConfig":"14"},{"size":1234,"mtime":1669486358754,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"968yps",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\index.js",[],["52","53"],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\App.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\pages\\SavedBooks.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\pages\\SearchBooks.js",["54"],"import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\nimport { searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchBooks = () => {\n\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n\n      const response = await saveBook({ variables: { input: bookToSave } })\n\n      // const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\components\\Navbar.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\components\\SignupForm.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\components\\LoginForm.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\queries.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\mutations.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\API.js",[],"C:\\Users\\User\\Coding\\HW\\Book_Search_Engine\\client\\src\\utils\\auth.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":27,"column":22,"nodeType":"61","messageId":"62","endLine":27,"endColumn":27},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]